<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>beka&#39;s blog blog</title><link href="http://beka.github.com/blog/atom.xml" rel="self"/><link href="http://beka.github.com"/><updated>2011-07-22T00:39:21Z</updated><id>http://beka.github.com</id><entry><title>Concurrent Haskell</title><author><name>beka</name></author><link href="http://beka.github.com/blog/2011/concurrent_haskell.html"/><updated>2011-07-21T22:07:29Z</updated><published>2011-07-21T22:07:29Z</published><id>http://beka.github.com/blog/2011/concurrent_haskell.html</id><content type="html">
       

&lt;p&gt;Right now, the area Haskell absolutely thrashes everything else is speedy and lightweight concurrency (it even stomps Erlang in the Debian Shootout). So if you can find a project that needs fluid responsiveness, multi-connection or or multi-CPU scaling, Haskell is the ideal&amp;nbsp;tool.&lt;/p&gt;

   </content></entry></feed>